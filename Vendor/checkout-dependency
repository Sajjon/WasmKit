#!/usr/bin/env python3
#
# This script checks out a dependency from a git repository.
#
# Usage:
#   checkout-dependency <dependency-name>

import os
import sys
import json
import subprocess


def main():
    if len(sys.argv) != 2:
        print("Usage: checkout-dependency <dependency-name>")
        sys.exit(1)

    dependency_name = sys.argv[1]
    dependencies_file = os.path.join(os.path.dirname(__file__), "dependencies.json")
    dependencies = json.load(open(dependencies_file))
    dependency = dependencies.get(dependency_name)

    if dependency is None:
        print(f"Dependency '{dependency_name}' not found in {dependencies_file}")
        print(f"Available dependencies: {', '.join(dependencies.keys())}")
        sys.exit(1)

    dependency_path = os.path.join(os.path.dirname(__file__), dependency_name)
    if os.path.exists(dependency_path):
        print(f"Dependency '{dependency_name}' already exists at {dependency_path}")
        sys.exit(0)

    print(f"Checking out '{dependency_name}' to {dependency_path}")
    subprocess.run(["git", "clone", dependency["repository"], dependency_path], check=True)
    subprocess.run(["git", "-C", dependency_path, "checkout", dependency["revision"]], check=True)


if __name__ == "__main__":
    main()
